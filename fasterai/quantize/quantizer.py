# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/06_quantize.quantizer.ipynb.

# %% auto 0
__all__ = ['QuantizeCallback']

# %% ../../nbs/06_quantize.quantizer.ipynb 2
import torch
import torch.nn as nn
import torch.nn.functional as F

from torch.ao.quantization import get_default_qconfig_mapping
import torch.ao.quantization.quantize_fx as quantize_fx
from torch.ao.quantization.quantize_fx import convert_fx, prepare_fx

# %% ../../nbs/06_quantize.quantizer.ipynb 4
class QuantizeCallback(Callback):
    def __init__(self, qconfig_mapping=None, backend='x86'):
        self.qconfig_mapping = qconfig_mapping or get_default_qat_qconfig_mapping(backend)

    def before_fit(self):
        example_inputs, _ = next(iter(self.dls.train))
        self.learn.model = quantize_fx.prepare_qat_fx(self.learn.model, self.qconfig_mapping, example_inputs)

    def after_fit(self):
        self.learn.model.eval()
        self.learn.model = quantize_fx.convert_fx(self.learn.model.to('cpu'))
